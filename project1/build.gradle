/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}

// Define the main class for the application
mainClassName = 'meic.ist.pa.GenericFunctions.WithGenericFunction'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    compile 'org.javassist:javassist:3.22.0-GA'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

test {
    //we want display the following test events
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

def EXAMPLES_GROUP = "Examples Apps"

task runColor(type: JavaExec) {
    group = EXAMPLES_GROUP
    description = "Runs enunciado.ColorApp example"
    classpath = sourceSets.main.runtimeClasspath
    args = ["examples.enunciado.ColorApp"] // working
    main = mainClassName
}

task runCom(type: JavaExec) {
    group = EXAMPLES_GROUP
    description = "Runs ComApp example"
    classpath = sourceSets.main.runtimeClasspath
    args = ["examples.enunciado.ComApp"]  // working
    main = mainClassName
}

task runDevice(type: JavaExec) {
    group = EXAMPLES_GROUP
    description = "Runs DeviceApp example"
    classpath = sourceSets.main.runtimeClasspath
    args = ["examples.enunciado.DeviceApp"] // working
    main = mainClassName
}

task runExplain(type: JavaExec) {
    group = EXAMPLES_GROUP
    description = "Runs ExplainApp example"
    classpath = sourceSets.main.runtimeClasspath
    args = ["examples.enunciado.ExplainApp"]
    main = mainClassName
}

task runOldSimpleAddApp(type: JavaExec) {
    group = EXAMPLES_GROUP
    description = "Runs oldTests.SimpleAddApp example"
    classpath = sourceSets.main.runtimeClasspath
    args = ["examples.oldTests.SimpleAddApp"]
    main = mainClassName
}

task runMyImplementsColorApp(type: JavaExec) {
    group = EXAMPLES_GROUP
    description = "Runs myTests.ImplementsColorApp example"
    classpath = sourceSets.main.runtimeClasspath
    args = ["examples.myTests.ImplementsColorApp"]
    main = mainClassName
}

task runAll {
    group = EXAMPLES_GROUP
    description = "Runs all examples apps"
    dependsOn 'runColor'
    dependsOn 'runCom'
    dependsOn 'runDevice'
    dependsOn 'runExplain'
    dependsOn 'runOldSimpleAddApp'
}
