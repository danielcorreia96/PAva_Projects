/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import ist.meic.pa.GenericFunctions.WithGenericFunction;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.Assert.assertEquals;

public class ExamplesTests {
    private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();

    @Before
    public void setUpStreams() {
        System.setOut(new PrintStream(outContent));
        System.setErr(new PrintStream(errContent));
    }

    @After
    public void restoreStreams() {
        System.setOut(System.out);
        System.setErr(System.err);
    }

    @Test public void testComApp() throws Throwable {
        WithGenericFunction.main(new String[]{"examples.enunciado.ComApp"});
        String expected =
                "Combine(Hello,World) -> Hello, World!\n" +
                "Combine(Hello,2) -> HelloHello\n" +
                "Combine(Hello,B) -> Hello, B!\n" +
                "Combine(1,World) -> [1, World]\n" +
                "Combine(1,2) -> 3\n" +
                "Combine(1,B) -> [1, B]\n" +
                "Combine(A,World) -> [A, World]\n" +
                "Combine(A,2) -> [A, 2]\n" +
                "Combine(A,B) -> [A, B]\n";
        assertEquals("Wrong output",expected, outContent.toString());
    }

    @Test public void testColorApp() throws Throwable {
        WithGenericFunction.main(new String[]{"examples.enunciado.ColorApp"});
        String expected =
                "More red\n" +
                "Magenta\n" +
                "Orange\n" +
                "Magenta\n" +
                "More blue\n" +
                "Green\n" +
                "Orange\n" +
                "Green\n" +
                "More yellow\n";
        assertEquals("Wrong output",expected, outContent.toString());
    }

    @Test public void testDeviceApp() throws Throwable {
        WithGenericFunction.main(new String[]{"examples.enunciado.DeviceApp"});
        String expected =
                "draw a line on screen!\n" +
                "draw a circle on screen!\n" +
                "draw a line on printer!\n" +
                "draw a circle on printer!\n";
        assertEquals("Wrong output",expected, outContent.toString());
    }

    @Test public void testExplainApp() throws Throwable {
        WithGenericFunction.main(new String[]{"examples.enunciado.ExplainApp"});
        String expected =
                "Hello is a string.\n" +
                "The number 1 is an integer.\n" +
                "The number 2.0 is a double.\n";
        assertEquals("Wrong output",expected, outContent.toString());
    }

}
